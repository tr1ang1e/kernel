
# --------------------------------------------------------------------------- #
#              D E V E L O P M E N T   E N V I R O N M E N T                  # 
# --------------------------------------------------------------------------- #    


0. Bring OS to appropriate state 
   [https://www.raspberrypi.com/documentation/computers/os.html#updating-and-upgrading-raspberry-pi-os]

    $ apt update
    $ apt full-upgrade


1. Build tools

    $ sudo apt install build-essential
    $ gcc --version
    $ make --version


2. Linux kernel artifacts for out-of-tree kernel modules

    [!] Bullseye Linux distro, others might differ
    $ apt-cahe search raspberrypi                   // list all pakages just for reference
    $ apt install raspberrypi-kernel-headers        // install all neseccary for current kernel oot-modules development
    
    // Verification steps
    $ apt show raspberrypi-kernel-headers           // verify installation info
    $ ls -l /lib/modules/`uname -r`/build           // verify simlink is created
    $ tree -L 1 /lib/modules/`uname -r`/build       // verify directories tree
    $ find / -name Module.symvers                   // verify file with all the STATIC exported kernel symbols

    [!] For building in-kernel modules special approach is required [https://github.com/RPi-Distro/rpi-source]

    [?] How to build oot-kernel modules for:
        - kernel not running on current device or
        - using toolchain for cross-compile on another distro?
    
    [?] How does building from source affect building oot-kernel modules development?
        Can we use all the headers and exported kernel symbols from kernel build tree?


# --------------------------------------------------------------------------- #
#                    V I S U A L   S T U D I O   C O D E                      # 
# --------------------------------------------------------------------------- #   


Q: Error "function returning array is not allowed C/C++"
A: Add following defines to c_cpp_properties.json: "__KERNEL__", "MODULE" 
